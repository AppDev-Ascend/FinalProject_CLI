{"type": "Multiple Choice", "questions": [{"question": "What is the purpose of the Abstract Factory Pattern?", "options": ["To create families of related or dependent objects without specifying their concrete classes", "To extract the product creation code into one place", "To introduce new variants of products without breaking existing client code", "To promote the creation of consistent object families"], "answer": 0}, {"question": "What is the Open/Closed Principle?", "options": ["To create families of related or dependent objects without specifying their concrete classes", "To extract the product creation code into one place", "To introduce new variants of products without breaking existing client code", "To promote the creation of consistent object families"], "answer": 2}, {"question": "What is a potential disadvantage of using the Abstract Factory Pattern?", "options": ["The code may become more complicated than it should be, since a lot of new interfaces and classes are introduced along with the pattern", "To extract the product creation code into one place", "To introduce new variants of products without breaking existing client code", "To promote the creation of consistent object families"], "answer": 0}, {"question": "What does the Abstract Factory Pattern involve?", "options": ["Creating abstract classes for object creation, with each abstract class representing a family of related objects", "To extract the product creation code into one place", "To introduce new variants of products without breaking existing client code", "To promote the creation of consistent object families"], "answer": 0}, {"question": "What is the purpose of the Prototype Pattern?", "options": ["To create families of related or dependent objects without specifying their concrete classes", "To extract the product creation code into one place", "To introduce new variants of products without breaking existing client code", "To allow objects to be copied or cloned"], "answer": 3}, {"question": "What are some resources that discuss advanced programming styles and idioms?", "options": ["J. O. Coplien, 'Advanced C++ Programming Styles and Idioms'", "A. J. Goldberg and D. Robson, 'Smalltalk-80: The Language and Its Implementation'", "Addison-Wesley, Reading, MA, 1992", "Addison-Wesley, Reading, MA, 1983"], "answer": 0}]}