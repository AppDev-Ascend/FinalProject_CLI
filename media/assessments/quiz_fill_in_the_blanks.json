{"type": "Fill in the Blanks", "questions": [{"question": "______ is a creation design pattern that provides an interface for creating families of related or dependent objects without specifying their concrete classes.", "answer": "Abstract Factory Pattern"}, {"question": "The Abstract Factory Pattern involves creating abstract classes for object creation, with each abstract class representing a ______ of related objects.", "answer": "family"}, {"question": "Concrete subclasses implement these abstract classes to produce specific instances of the related objects. This pattern promotes the creation of ______ object families.", "answer": "consistent"}, {"question": "The Abstract Factory Pattern ensures compatibility between objects within a family and allows for easy ______ of entire families of objects.", "answer": "interchangeability"}, {"question": "The Abstract Factory Pattern is particularly useful when the system needs to be independent of how its objects are ______, composed, and represented.", "answer": "created"}]}