{
    "type": "Identification",
    "questions": [
        {
            "question": "What is the Prototype Pattern?",
            "answer": "The Prototype Pattern is a creational design pattern that focuses on creating objects by copying an existing object."
        },
        {
            "question": "What is the key component in the Prototype Pattern?",
            "answer": "The key component in the Prototype Pattern is the Prototype, which declares the methods for cloning itself."
        },
        {
            "question": "What is the role of the Client in the Prototype Pattern?",
            "answer": "The Client is responsible for creating new objects by requesting the prototype to clone itself."
        },
        {
            "question": "What are the advantages of using the Prototype Pattern?",
            "answer": "The advantages of using the Prototype Pattern are efficient object creation, reducing subclassing, and configuring objects with different properties."
        },
        {
            "question": "What are the two ways to implement the Prototype Pattern in Java?",
            "answer": "The two ways to implement the Prototype Pattern in Java are using the Cloneable Interface and creating a custom clone method."
        }
    ]
}